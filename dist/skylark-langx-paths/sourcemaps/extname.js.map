{"version":3,"sources":["extname.js"],"names":["define","paths","normalize","extname","p","sections","split","sep","pop","length","i","lastIndexOf","substr"],"mappings":";;;;;;;AAAAA,QACC,UACG,eACF,SAASC,EAAMC,GAsCb,OAAOD,EAAME,QAlBb,SAAiBC,GAEb,IAAIC,GADJD,EAAIF,EAAUE,IACGE,MAAML,EAAMM,KAM7B,GAHU,MAFVH,EAAIC,EAASG,QAEGH,EAASI,OAAS,IAC9BL,EAAIC,EAASG,OAEP,OAANJ,EACA,MAAO,GAEX,IAAIM,EAAIN,EAAEO,YAAY,KACtB,OAAW,IAAPD,GAAkB,IAANA,EACL,GAEJN,EAAEQ,OAAOF","file":"../extname.js","sourcesContent":["define([\r\n\t\"./paths\",\r\n    \"./normalize\"\r\n],function(paths,normalize){\r\n    /**\r\n     * Return the extension of the path, from the last '.' to end of string in the\r\n     * last portion of the path. If there is no '.' in the last portion of the path\r\n     * or the first character of it is '.', then it returns an empty string.\r\n     * @example Usage example\r\n     *   paths.extname('index.html')\r\n     *   // returns\r\n     *   '.html'\r\n     *\r\n     *   paths.extname('index.')\r\n     *   // returns\r\n     *   '.'\r\n     *\r\n     *   paths.extname('index')\r\n     *   // returns\r\n     *   ''\r\n     * @param [String] p\r\n     * @return [String]\r\n     */\r\n    function extname(p) {\r\n        p = normalize(p);\r\n        var sections = p.split(paths.sep);\r\n        p = sections.pop();\r\n        // Special case: foo/file.ext/ should return '.ext'\r\n        if (p === '' && sections.length > 0) {\r\n            p = sections.pop();\r\n        }\r\n        if (p === '..') {\r\n            return '';\r\n        }\r\n        var i = p.lastIndexOf('.');\r\n        if (i === -1 || i === 0) {\r\n            return '';\r\n        }\r\n        return p.substr(i);\r\n    }\r\n\r\n    return paths.extname = extname;\r\n});"]}