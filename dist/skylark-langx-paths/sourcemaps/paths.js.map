{"version":3,"sources":["paths.js"],"names":["define","skylark","paths","_makeLong","p","_removeDuplicateSeps","replace","this","_replaceRegex","sep","RegExp","delimiter","posix","win32","attach"],"mappings":";;;;;;;AAAAA,QACC,oBACC,SAASC,GAgBV,IAAIC,GAMDC,UAAkB,SAAUC,GACxB,OAAOA,GAIXC,qBAA6B,SAAUD,GAEnC,OADAA,EAAIA,EAAEE,QAAQC,KAAKC,cAAeD,KAAKE,MAK3CA,IAAY,KASf,OARGP,EAAMM,cAAgB,IAAIE,OAAO,MAAO,KAExCR,EAAMS,UAAY,IAClBT,EAAMU,MAAQV,EAEdA,EAAMW,MAAQX,EAGVD,EAAQa,OAAO,cAAcZ","file":"../paths.js","sourcesContent":["define([\r\n\t\"skylark-langx-ns\"\r\n],function(skylark){\r\n\tvar splitPathRe = /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\r\n\r\n\tfunction posixSplitPath(filename) {\r\n\t    var out = splitPathRe.exec(filename);\r\n\t    out.shift();\r\n\t    return out;\r\n\t}\r\n\t/**\r\n\t * Emulates Node's `path` module. This module contains utilities for handling and\r\n\t * transforming file paths. **All** of these methods perform only string\r\n\t * transformations. The file system is not consulted to check whether paths are\r\n\t * valid.\r\n\t * @see http://nodejs.org/api/path.html\r\n\t * @class\r\n\t */\r\n\tvar paths = {};\r\n\r\n\r\n    /**\r\n     * Unknown. Undocumented.\r\n     */\r\n    paths._makeLong = function (p) {\r\n        return p;\r\n    };\r\n\r\n\r\n    paths._removeDuplicateSeps = function (p) {\r\n        p = p.replace(this._replaceRegex, this.sep);\r\n        return p;\r\n    };\r\n\r\n    // The platform-specific file separator. BrowserFS uses `/`.\r\n    paths.sep = '/';\r\n    paths._replaceRegex = new RegExp(\"//+\", 'g');\r\n    // The platform-specific path delimiter. BrowserFS uses `:`.\r\n    paths.delimiter = ':';\r\n    paths.posix = paths;\r\n    // XXX: Typing hack. We don't actually support win32.\r\n    paths.win32 = paths;\r\n\r\n\r\n\treturn skylark.attach(\"langx.paths\",paths);\r\n});"]}